<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%" creationComplete="creationCompleteHandler(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			protected var isValid:Boolean;
			
			protected var error:Array = new Array();
			
			public var navLabel:Object;
			
			[Bindable]
			protected var _context:Object;
			
			[Bindable]
			public function get context():Object
			{
				return _context;
			}

			public function set context(value:Object):void
			{
				_context = value;
			}

			protected function callbackForNext():void{
				// override by sub-class.
				trace("wizardpage callback for next event");
				this.isValid = true;
			}
			
			protected function callbackForBack():void{
				// override by sub-class.
				trace("wizardpage callback for back event");
			}
			
			protected function callbackForNavLabelClick():void{
				// override by sub-class.
				trace("wizardpage callback for nav label click event");
			}
			
			protected function initWizardPage():void{
				// override by sub-class.
				trace("init wizardpage");
			}
			
			protected function callbackForPageAdd():void{
				// override by sub-class.
				trace("wizardpage callback for add to container");
			}
			
			override protected function resourcesChanged():void{
				
				if(!this.hasEventListener(WizardEvent.PAGE_ADD)){
					this.addEventListener(WizardEvent.PAGE_ADD, function(evt:WizardEvent):void{
						
						callbackForPageAdd();
					});
				}
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				//Alert.show('wizard creationCompleteHandler');
				this.addEventListener(WizardEvent.NEXT, function(evt:WizardEvent):void{
					
					callbackForNext();
					
					var wizardEvent:WizardEvent = new WizardEvent(WizardEvent.NEXT_VALID);
					wizardEvent.data.isValid = isValid;
					
					if(!isValid){
						wizardEvent.data.error = error;
					}
					
					dispatchEvent(wizardEvent);
				});
				
				this.addEventListener(WizardEvent.BACK, function(evt:WizardEvent):void{
					
					callbackForBack();
					
					var wizardEvent:WizardEvent = new WizardEvent(WizardEvent.BACK_VALID);
					wizardEvent.data.isValid = isValid;
					
					if(!isValid){
						wizardEvent.data.error = error;
					}
					
					dispatchEvent(wizardEvent);
				});
				
				this.addEventListener(WizardEvent.NAV_LABEL_CLICK, function(evt:WizardEvent):void{
					
					callbackForNavLabelClick();
				});
				
				initWizardPage();
			}
			
		]]>
	</fx:Script>
	
</s:Group>
